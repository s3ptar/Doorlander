/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : ACCEL1.h
**     Project     : Doorlander
**     Processor   : MCF51JM128VLH
**     Component   : MMA7260Q
**     Version     : Component 01.111, Driver 01.00, CPU db: 3.00.063
**     Compiler    : CodeWarrior ColdFireV1 C Compiler
**     Date/Time   : 2018-07-15, 09:31, # CodeGen: 16
**     Abstract    :
**
**     Settings    :
**          Component name                                 : ACCEL1
**          HW Interface                                   : 
**            G Select                                     : Enabled
**              G Select 1 Signal                          : Accel_Gselect
**              G Select 2 Signal                          : Accel_Gselect
**            Sleep                                        : Enabled
**              Sleep Signal                               : Accel_Sleep
**              Enabled in init                            : yes
**              Enable/Disable A/D                         : no
**            A/D                                          : 
**              A/D Converter                              : AD1
**              X channel                                  : 0
**              Y channel                                  : 1
**              Z channel                                  : 2
**          Calibration                                    : 
**            X offset                                     : 0
**            X 1g value                                   : 6000
**            Y offset                                     : 0
**            Y 1g value                                   : 6000
**            Z offset                                     : 0
**            Z 1g value                                   : 6000
**          System                                         : 
**            Wait                                         : WAIT1
**          Shell                                          : Disabled
**     Contents    :
**         GetX           - int16_t ACCEL1_GetX(void);
**         GetY           - int16_t ACCEL1_GetY(void);
**         GetZ           - int16_t ACCEL1_GetZ(void);
**         Gselect        - void ACCEL1_Gselect(byte gSelect);
**         SensorOn       - void ACCEL1_SensorOn(void);
**         SensorOff      - void ACCEL1_SensorOff(void);
**         CalibrateX1g   - void ACCEL1_CalibrateX1g(void);
**         CalibrateY1g   - void ACCEL1_CalibrateY1g(void);
**         CalibrateZ1g   - void ACCEL1_CalibrateZ1g(void);
**         GetXmg         - int16_t ACCEL1_GetXmg(void);
**         GetYmg         - int16_t ACCEL1_GetYmg(void);
**         GetZmg         - int16_t ACCEL1_GetZmg(void);
**         MeasureGetRawX - word ACCEL1_MeasureGetRawX(void);
**         MeasureGetRawY - word ACCEL1_MeasureGetRawY(void);
**         MeasureGetRawZ - word ACCEL1_MeasureGetRawZ(void);
**         GetXOffset     - int16_t ACCEL1_GetXOffset(void);
**         GetYOffset     - int16_t ACCEL1_GetYOffset(void);
**         GetZOffset     - int16_t ACCEL1_GetZOffset(void);
**         GetX1gValue    - int16_t ACCEL1_GetX1gValue(void);
**         GetY1gValue    - int16_t ACCEL1_GetY1gValue(void);
**         GetZ1gValue    - int16_t ACCEL1_GetZ1gValue(void);
**         Deinit         - byte ACCEL1_Deinit(void);
**
**Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com
** ###################################################################*/
/*!
** @file ACCEL1.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup ACCEL1_module ACCEL1 module documentation
**  @{
*/         

#ifndef __ACCEL1_H
#define __ACCEL1_H

/* MODULE ACCEL1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "G11.h"
#include "G21.h"
#include "Sleep1.h"
#include "AD1.h"
#include "WAIT1.h"

#include "Cpu.h"



/* types for G-Select function */
#define ACCEL1_G_select1_5 0x00  /* 1.5 g sensitivity */
#define ACCEL1_G_Select2_0 0x01  /* 2 g sensitivity */
#define ACCEL1_G_Select4_0 0x02  /* 4 g sensitivity */
#define ACCEL1_G_Select6_0 0x03  /* 6 g sensitivity */

#define ACCEL1_PARSE_COMMAND_ENABLED  0 /* set to 1 if method ParseCommand() is present, 0 otherwise */


byte ACCEL1_Init(void);
/*
** ===================================================================
**     Method      :  ACCEL1_Init (component MMA7260Q)
**
**     Description :
**         Initializes the driver.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

int16_t ACCEL1_GetX(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetX (component MMA7260Q)
**     Description :
**         Retrieves the value for the X axis. The value is adjusted
**         with the zero calibration value (0 for 0 g, negative for
**         negative acceleration and positive for positive acceleration).
**     Parameters  : None
**     Returns     :
**         ---             - Measured X value
** ===================================================================
*/

void ACCEL1_SensorOn(void);
/*
** ===================================================================
**     Method      :  ACCEL1_SensorOn (component MMA7260Q)
**     Description :
**         Enables the sensor.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void ACCEL1_SensorOff(void);
/*
** ===================================================================
**     Method      :  ACCEL1_SensorOff (component MMA7260Q)
**     Description :
**         Disables the sensor (puts it in sleep mode).
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void ACCEL1_Gselect(byte gSelect);
/*
** ===================================================================
**     Method      :  ACCEL1_Gselect (component MMA7260Q)
**     Description :
**         Allows to select different g sensitivity levels.
**     Parameters  :
**         NAME            - DESCRIPTION
**         gSelect         - Pass 0 for 1.5g, 1 for 2g, 3 for
**                           4g and 4 for 6g sensitivity. The driver
**                           header file defines the values as macros as
**                           well.
**     Returns     : Nothing
** ===================================================================
*/

int16_t ACCEL1_GetY(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetY (component MMA7260Q)
**     Description :
**         Retrieves the value for the Y axis. The value is adjusted
**         with the zero calibration value (0 for 0 g, negative for
**         negative acceleration and positive for positive acceleration).
**     Parameters  : None
**     Returns     :
**         ---             - Measured Y value
** ===================================================================
*/

int16_t ACCEL1_GetZ(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetZ (component MMA7260Q)
**     Description :
**         Retrieves the value for the Z axis. The value is adjusted
**         with the zero calibration value (0 for 0 g, negative for
**         negative acceleration and positive for positive acceleration).
**     Parameters  : None
**     Returns     :
**         ---             - Measured Z value
** ===================================================================
*/

void ACCEL1_CalibrateY1g(void);
/*
** ===================================================================
**     Method      :  ACCEL1_CalibrateY1g (component MMA7260Q)
**     Description :
**         Performs a calibration of the sensor. It is assumed that the
**         X and Z sensors have 0 g, and the Y sensor has 1 g.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

int16_t ACCEL1_GetXmg(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetXmg (component MMA7260Q)
**     Description :
**         Returns the X value in mg
**     Parameters  : None
**     Returns     :
**         ---             - The g value in 1/1000g units
** ===================================================================
*/

int16_t ACCEL1_GetYmg(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetYmg (component MMA7260Q)
**     Description :
**         Returns the Y value in mg
**     Parameters  : None
**     Returns     :
**         ---             - The g value in 1/1000g units
** ===================================================================
*/

int16_t ACCEL1_GetZmg(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetZmg (component MMA7260Q)
**     Description :
**         Returns the Z value in mg
**     Parameters  : None
**     Returns     :
**         ---             - The g value in 1/1000g units
** ===================================================================
*/

word ACCEL1_MeasureGetRawX(void);
/*
** ===================================================================
**     Method      :  ACCEL1_MeasureGetRawX (component MMA7260Q)
**     Description :
**         Performs a measurement on X channel and returns the raw
**         value.
**     Parameters  : None
**     Returns     :
**         ---             - X sensor value
** ===================================================================
*/

word ACCEL1_MeasureGetRawY(void);
/*
** ===================================================================
**     Method      :  ACCEL1_MeasureGetRawY (component MMA7260Q)
**     Description :
**         Performs a measurement on Y channel and returns the raw
**         value.
**     Parameters  : None
**     Returns     :
**         ---             - Y sensor value
** ===================================================================
*/

word ACCEL1_MeasureGetRawZ(void);
/*
** ===================================================================
**     Method      :  ACCEL1_MeasureGetRawZ (component MMA7260Q)
**     Description :
**         Performs a measurement on Z channel and returns the raw
**         value.
**     Parameters  : None
**     Returns     :
**         ---             - Z sensor value
** ===================================================================
*/

int16_t ACCEL1_GetXOffset(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetXOffset (component MMA7260Q)
**     Description :
**         Returns the offset applied to the X value.
**     Parameters  : None
**     Returns     :
**         ---             - Z offset value
** ===================================================================
*/

int16_t ACCEL1_GetYOffset(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetYOffset (component MMA7260Q)
**     Description :
**         Returns the offset applied to the Y value.
**     Parameters  : None
**     Returns     :
**         ---             - Z offset value
** ===================================================================
*/

int16_t ACCEL1_GetZOffset(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetZOffset (component MMA7260Q)
**     Description :
**         Returns the offset applied to the Z value.
**     Parameters  : None
**     Returns     :
**         ---             - Z offset value
** ===================================================================
*/

int16_t ACCEL1_GetX1gValue(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetX1gValue (component MMA7260Q)
**     Description :
**         Returns the value for 1g for channel  X.
**     Parameters  : None
**     Returns     :
**         ---             - 1g value for X
** ===================================================================
*/

int16_t ACCEL1_GetY1gValue(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetY1gValue (component MMA7260Q)
**     Description :
**         Returns the value for 1g for channel  Y.
**     Parameters  : None
**     Returns     :
**         ---             - 1g value for Y
** ===================================================================
*/

int16_t ACCEL1_GetZ1gValue(void);
/*
** ===================================================================
**     Method      :  ACCEL1_GetZ1gValue (component MMA7260Q)
**     Description :
**         Returns the value for 1g for channel  X.
**     Parameters  : None
**     Returns     :
**         ---             - 1g value for Y
** ===================================================================
*/

void ACCEL1_CalibrateX1g(void);
/*
** ===================================================================
**     Method      :  ACCEL1_CalibrateX1g (component MMA7260Q)
**     Description :
**         Performs a calibration of the sensor. It is assumed that the
**         Y and Z sensors have 0 g, and the X sensor has 1 g.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void ACCEL1_CalibrateZ1g(void);
/*
** ===================================================================
**     Method      :  ACCEL1_CalibrateZ1g (component MMA7260Q)
**     Description :
**         Performs a calibration of the sensor. It is assumed that the
**         X and Y sensors have 0 g, and the Z sensor has 1 g.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

byte ACCEL1_Deinit(void);
/*
** ===================================================================
**     Method      :  ACCEL1_Deinit (component MMA7260Q)
**     Description :
**         Deinitializes the driver
**     Parameters  : None
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

/* END ACCEL1. */

#endif
/* ifndef __ACCEL1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale ColdFireV1 series of microcontrollers.
**
** ###################################################################
*/
